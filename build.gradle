buildscript {
    repositories {
        jcenter()
    }
}

plugins {
    id 'java'
    id 'jacoco'

    id 'checkstyle'
    id 'pmd'

    // required for: website.gradle
    id 'org.ajoberstar.git-publish' version '0.3.0'

    // deploy to maven central
    id 'maven'
    id 'maven-publish'
    id 'signing'
    id "com.jfrog.bintray" version "1.7.3"
    id 'ru.vyarus.animalsniffer' version '1.4.3'
}

apply plugin: 'ru.vyarus.animalsniffer'
dependencies {
    signature "net.sf.androidscents.signature:android-api-level-9:2.3.1_r2@signature"
}
animalsniffer {
    sourceSets = [sourceSets.main]
}


checkstyle {
    toolVersion = "8.1"
    showViolations  = false
    sourceSets = [ project.sourceSets.main ]
    // maxWarnings = 0
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled true
        // html.destination rootProject.file("build/reports/checkstyle.html")
        // html.stylesheet resources.text.fromFile('config/xsl/checkstyle-custom.xsl')
    }
}

jacoco {
    toolVersion = "0.7.9"
    reportsDir = file("${buildDir}/jacocoHtml")
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled true
        html.destination file("${buildDir}/jacocoHtml")
    }
}

pmd {
    toolVersion = "5.8.1"
    ruleSetFiles = files("config/pmd/ruleset.xml")
    sourceSets = [ project.sourceSets.main ]
    ignoreFailures = false
}

// Global configuration
project.ext.set("cms_BuildRoot", "$buildDir/website_src")

project.ext.set("specifications_cms_cmsdRoot", "$projectDir/website")
project.ext.set("specifications_cms_target", "$buildDir/website")

project.ext.set("specifications_concordion_target", "$reporting.baseDir/specs/concordion")

project.ext.set("specifications_prepareForCms_source", "$specifications_concordion_target/specs")
project.ext.set("specifications_prepareForCms_target", "$cms_BuildRoot/content/HowTo")

// use ./gradlew -PHUGO_EXEC=/path/to/hugo to configure the executable for hugo
project.ext.set("hugo", project.hasProperty("HUGO_EXEC") ? HUGO_EXEC : "hugo")

// ----

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = 'name.neuhalfen.projects.crypto.bouncycastle.openpgp'
version = '2.1.0'

repositories {
    jcenter()
}

dependencies {
    compile 'org.bouncycastle:bcprov-jdk15on:1.59'
    compile 'org.bouncycastle:bcpg-jdk15on:1.59'

    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'ch.qos.logback:logback-classic:1.2.3'

    // @Nullable and friends are not needed at runtime
    compile 'com.google.code.findbugs:jsr305:3.0.1'

    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.mockito:mockito-core:2.8.9'

    testCompile "org.concordion:concordion:2.1.0"
    testCompile 'org.concordion:concordion-api-documentation-extension:0.0.4'
}



test {
    // Concordion
    // display test output on console? (for debugging)
    testLogging.showStandardStreams = false
    // write output to build/reports/spec
    systemProperties['concordion.output.dir'] = "${specifications_concordion_target}"
    // force tests to run even if code hasn't changed
    outputs.upToDateWhen { false }
}

// bintray deployment
// configured in gradle.properties

if (hasProperty('bintray_Username')) {
    apply from: 'bintray.gradle'
}

apply from: 'website.gradle'

task wrapper(type: Wrapper) {
    gradleVersion = '4.1'
}
